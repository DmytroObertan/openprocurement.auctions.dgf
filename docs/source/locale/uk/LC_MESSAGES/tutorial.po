#
msgid ""
msgstr ""
"Project-Id-Version: openprocurement.auctions.dgf 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-12 15:36+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/tutorial.rst:4
msgid "Tutorial"
msgstr ""

#: ../../source/tutorial.rst:7
msgid "Exploring basic rules"
msgstr ""

#: ../../source/tutorial.rst:9
msgid "Let's try exploring the `/auctions` endpoint:"
msgstr ""

#: ../../source/tutorial.rst:14
msgid "Just invoking it reveals empty set."
msgstr ""

#: ../../source/tutorial.rst:16
msgid "Now let's attempt creating some auction:"
msgstr ""

#: ../../source/tutorial.rst:21
msgid ""
"Error states that the only accepted Content-Type is `application/json`."
msgstr ""

#: ../../source/tutorial.rst:23
msgid "Let's satisfy the Content-type requirement:"
msgstr ""

#: ../../source/tutorial.rst:28
msgid "Error states that no `data` has been found in JSON body."
msgstr ""

#: ../../source/tutorial.rst:34
msgid "Creating auction"
msgstr ""

#: ../../source/tutorial.rst:36
msgid "Let's create auction with the minimal (only required) data set:"
msgstr ""

#: ../../source/tutorial.rst:41
msgid ""
"Success! Now we can see that new object was created. Response code is `201` "
"and `Location` response header reports the location of the created object.  "
"The body of response reveals the information about the created auction: its "
"internal `id` (that matches the `Location` segment), its official "
"`auctionID` and `dateModified` datestamp stating the moment in time when "
"auction was last modified. Pay attention to the `procurementMethodType`. "
"Note that auction is created with `active.tendering` status."
msgstr ""

#: ../../source/tutorial.rst:49
msgid ""
"Let's access the URL of the created object (the `Location` header of the "
"response):"
msgstr ""

#: ../../source/tutorial.rst:56
msgid "We can see the same response we got after creating auction."
msgstr ""

#: ../../source/tutorial.rst:58
msgid "Let's see what listing of auctions reveals us:"
msgstr ""

#: ../../source/tutorial.rst:65
msgid ""
"The previous auction contained only required fields. Let's try creating "
"auction with more data (auction has status `created`):"
msgstr ""

#: ../../source/tutorial.rst:71
msgid ""
"And again we have `201 Created` response code, `Location` header and body "
"with extra `id`, `auctionID`, and `dateModified` properties."
msgstr ""

#: ../../source/tutorial.rst:73
msgid "Let's check what auction registry contains:"
msgstr ""

#: ../../source/tutorial.rst:78
msgid "And indeed we have 2 auctions now."
msgstr ""

#: ../../source/tutorial.rst:82
msgid "Modifying auction"
msgstr ""

#: ../../source/tutorial.rst:84
msgid ""
"Let's update auction by supplementing it with all other essential "
"properties:"
msgstr ""

#: ../../source/tutorial.rst:91
msgid ""
"We see the added properies have merged with existing auction data. "
"Additionally, the `dateModified` property was updated to reflect the last "
"modification datestamp."
msgstr ""

#: ../../source/tutorial.rst:93
msgid "Checking the listing again reflects the new modification date:"
msgstr ""

#: ../../source/tutorial.rst:98
msgid "Procuring entity can set bid guarantee:"
msgstr ""

#: ../../source/tutorial.rst:107
msgid "Uploading documentation"
msgstr ""

#: ../../source/tutorial.rst:109
msgid ""
"Procuring entity can upload PDF files into the created auction. Uploading "
"should follow the :ref:`upload` rules."
msgstr ""

#: ../../source/tutorial.rst:115
msgid ""
"`201 Created` response code and `Location` header confirm document creation."
" We can additionally query the `documents` collection API endpoint to "
"confirm the action:"
msgstr ""

#: ../../source/tutorial.rst:122
msgid ""
"The single array element describes the uploaded document. We can upload more"
" documents:"
msgstr ""

#: ../../source/tutorial.rst:127
msgid "And again we can confirm that there are two documents uploaded."
msgstr ""

#: ../../source/tutorial.rst:132
msgid ""
"Let’s add new `documentType` field with `technicalSpecifications` parameter "
"to the previously uploaded document:"
msgstr ""

#: ../../source/tutorial.rst:137
msgid ""
"Success! Response code is `200 OK` and it confirms that `documentType` field"
" with `technicalSpecifications` parameter was added ."
msgstr ""

#: ../../source/tutorial.rst:139
msgid ""
"Now let’s try to modify any field in our document. For example, "
"`description`:"
msgstr ""

#: ../../source/tutorial.rst:144
msgid ""
"`200 OK` response was returned. The description was modified successfully."
msgstr ""

#: ../../source/tutorial.rst:146
msgid ""
"In case we made an error, we can reupload the document over the older "
"version:"
msgstr ""

#: ../../source/tutorial.rst:151
msgid "And we can see that it is overriding the original version:"
msgstr ""

#: ../../source/tutorial.rst:160
msgid "Enquiries"
msgstr ""

#: ../../source/tutorial.rst:162
msgid ""
"When auction is in `active.tendering` status, interested parties can ask "
"questions:"
msgstr ""

#: ../../source/tutorial.rst:167
msgid "Procuring entity can answer them:"
msgstr ""

#: ../../source/tutorial.rst:172
msgid "And one can retrieve the questions list:"
msgstr ""

#: ../../source/tutorial.rst:177
msgid "And individual answer:"
msgstr ""

#: ../../source/tutorial.rst:186
msgid "Registering bid"
msgstr ""

#: ../../source/tutorial.rst:188
msgid ""
"When ``Auction.auctioningPeriod.startDate`` comes, Auction switches to "
"`active.auctioning` status that allows registration of bids."
msgstr ""

#: ../../source/tutorial.rst:190
msgid "Bidder can register a bid in `draft` status:"
msgstr ""

#: ../../source/tutorial.rst:195
msgid "And activate a bid:"
msgstr ""

#: ../../source/tutorial.rst:200
msgid "And upload proposal document:"
msgstr ""

#: ../../source/tutorial.rst:205
msgid "It is possible to check the uploaded documents:"
msgstr ""

#: ../../source/tutorial.rst:210
msgid ""
"For best effect (biggest economy) Auction should have multiple bidders "
"registered:"
msgstr ""

#: ../../source/tutorial.rst:219
msgid "Auction"
msgstr ""

#: ../../source/tutorial.rst:221
msgid ""
"After auction is scheduled anybody can visit it to watch. The auction can be"
" reached at `Auction.auctionUrl`:"
msgstr ""

#: ../../source/tutorial.rst:226
msgid "And bidders can find out their participation URLs via their bids:"
msgstr ""

#: ../../source/tutorial.rst:231
msgid ""
"See the `Bid.participationUrl` in the response. Similar, but different, URL "
"can be retrieved for other participants:"
msgstr ""

#: ../../source/tutorial.rst:237
msgid "Confirming qualification"
msgstr ""

#: ../../source/tutorial.rst:239
msgid "Qualification comission registers its decision via the following call:"
msgstr ""

#: ../../source/tutorial.rst:245
msgid "Setting  contract value"
msgstr ""

#: ../../source/tutorial.rst:247
msgid ""
"By default contract value is set based on the award, but there is a "
"possibility to set custom contract value."
msgstr ""

#: ../../source/tutorial.rst:249
msgid ""
"If you want to **lower contract value**, you can insert new one into the "
"`amount` field."
msgstr ""

#: ../../source/tutorial.rst:254
msgid "`200 OK` response was returned. The value was modified successfully."
msgstr ""

#: ../../source/tutorial.rst:257
msgid "Setting contract signature date"
msgstr ""

#: ../../source/tutorial.rst:259
msgid ""
"There is a possibility to set custom contract signature date. You can insert"
" appropriate date into the `dateSigned` field."
msgstr ""

#: ../../source/tutorial.rst:261
msgid ""
"If this date is not set, it will be auto-generated on the date of contract "
"registration."
msgstr ""

#: ../../source/tutorial.rst:267
msgid "Setting contract validity period"
msgstr ""

#: ../../source/tutorial.rst:269
msgid ""
"Setting contract validity period is optional, but if it is needed, you can "
"set appropriate `startDate` and `endDate`."
msgstr ""

#: ../../source/tutorial.rst:275
msgid "Uploading contract documentation"
msgstr ""

#: ../../source/tutorial.rst:277
msgid "You can upload contract documents. Let's upload contract document:"
msgstr ""

#: ../../source/tutorial.rst:282
msgid ""
"`201 Created` response code and `Location` header confirm document was "
"added."
msgstr ""

#: ../../source/tutorial.rst:284
msgid "Let's see the list of contract documents:"
msgstr ""

#: ../../source/tutorial.rst:289
msgid "We can add another contract document:"
msgstr ""

#: ../../source/tutorial.rst:294
msgid ""
"`201 Created` response code and `Location` header confirm second document "
"was uploaded."
msgstr ""

#: ../../source/tutorial.rst:296
msgid "Let's see the list of all added contract documents:"
msgstr ""

#: ../../source/tutorial.rst:302
msgid "Set contract signature date"
msgstr ""

#: ../../source/tutorial.rst:304
msgid ""
"There is a possibility to set custom contract signature date. If the date is"
" not set it will be generated on contract registration."
msgstr ""

#: ../../source/tutorial.rst:311
msgid "Contract registration"
msgstr ""

#: ../../source/tutorial.rst:317
msgid "Cancelling auction"
msgstr ""

#: ../../source/tutorial.rst:319
msgid ""
"Auction creator can cancel auction anytime (except when auction has terminal"
" status e.g. `usuccesfull`, `canceled`, `complete`)."
msgstr ""

#: ../../source/tutorial.rst:321
msgid "The following steps should be applied:"
msgstr ""

#: ../../source/tutorial.rst:323
msgid "Prepare cancellation request"
msgstr ""

#: ../../source/tutorial.rst:324
msgid "Fill it with the protocol describing the cancellation reasons"
msgstr ""

#: ../../source/tutorial.rst:325
msgid "Cancel the auction with the reasons prepared."
msgstr ""

#: ../../source/tutorial.rst:327
msgid ""
"Only the request that has been activated (3rd step above) has power to "
"cancel auction.  I.e.  you have to not only prepare cancellation request but"
" to activate it as well."
msgstr ""

#: ../../source/tutorial.rst:331
msgid "See :ref:`cancellation` data structure for details."
msgstr ""

#: ../../source/tutorial.rst:334
msgid "Preparing the cancellation request"
msgstr ""

#: ../../source/tutorial.rst:336
msgid ""
"You should pass `reason`, `status` defaults to `pending`. `id` is "
"autogenerated and passed in the `Location` header of response."
msgstr ""

#: ../../source/tutorial.rst:344
msgid "Filling cancellation with protocol and supplementary documentation"
msgstr ""

#: ../../source/tutorial.rst:346
msgid "Upload the file contents"
msgstr ""

#: ../../source/tutorial.rst:351
msgid "Change the document description and other properties"
msgstr ""

#: ../../source/tutorial.rst:356
msgid "Upload new version of the document"
msgstr ""

#: ../../source/tutorial.rst:362
msgid "Activating the request and cancelling auction"
msgstr ""

#: ../../source/tutorial.rst:63
msgid ""
"We do see the internal `id` of a auction (that can be used to construct full"
" URL by prepending `https://api-"
"sandbox.ea.openprocurement.org/api/0/auctions/`) and its `dateModified` "
"datestamp."
msgstr ""

#~ msgid ""
#~ "We do see the internal `id` of a auction (that can be used to construct full"
#~ " URL by prepending `http://api-sandbox.openprocurement.org/api/0/auctions/`)"
#~ " and its `dateModified` datestamp."
#~ msgstr ""
